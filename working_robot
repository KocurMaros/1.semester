import curses
import RPi.GPIO as GPIO
import time

GPIO.setwarnings(False)

screen = curses.initscr()
curses.noecho()
curses.cbreak()
screen.keypad(True)

GPIO.setmode(GPIO.BOARD)
GPIO.setup(15 , GPIO.OUT)
GPIO.setup(11 , GPIO.OUT)
GPIO.setup(16 , GPIO.OUT)
GPIO.setup(18 , GPIO.OUT)
GPIO.setup(35, GPIO.OUT)
GPIO.setup(12, GPIO.OUT)
GPIO.setup(21, GPIO.IN)
GPIO.setup(22, GPIO.IN)


r = GPIO.PWM(35, 100)
l = GPIO.PWM(12, 100)

r.start(0)
l.start(0)

spd = 0
dire = 32

x = 0
y = 0
k = 0
prev_milli = int(round(time.time()*1000))
count1 = 0
count2 = 0

def change():
    global prev_milli
    global x
    global y
    act_milli = int(round(time.time()*1000))
    if((act_milli-prev_milli)>50):
        if count1 != count2:
            if count1 < count2:
                x-=2
            if count1 > count2:
                y-=2
	prev_milli = act_milli
    if(x<=0):
        x=0
    elif(x>=100):
        x=100
    if(y<=0):
        y=0
    elif(y>=100):
        y=100
    r.ChangeDutyCycle(x)
    l.ChangeDutyCycle(y)
    
def get_spr1(g):   #photo1
    global count1
    count1+=1
    change()
    print("x", x)
    print("y", y)
    print("c1", count1)
    

def get_spr2(g):   #photo2
    global count2
    count2+=1
    change()
    print("c2", count2)

def direction(dire):
    if dire == 258:
        print("backward")       #backward
        GPIO.output(15, False)
        GPIO.output(16, True)
        GPIO.output(11, False)
        GPIO.output(18, True)
    elif dire == 259:
        print("forward")           #forward
        GPIO.output(15, True)
        GPIO.output(16, False)
        GPIO.output(11, True)
        GPIO.output(18, False)
    elif dire == 260:
        print("left")         #left
        GPIO.output(15, True)
        GPIO.output(16, False)
        GPIO.output(11, False)
        GPIO.output(18, True)
    elif dire == 261:
        print("right")           #right
        GPIO.output(15, False)
        GPIO.output(16, True)
        GPIO.output(11, True)
        GPIO.output(18, False)
    elif dire == 32:
        print("stop")            #stop
        GPIO.output(15, False)
        GPIO.output(16, False)
        GPIO.output(11, False)
        GPIO.output(18, False)
        
def speed(spd):
    global x
    global y
    if spd == 108:
        x+=2
        y+=2
    elif spd == 268:
        x-=2
        y-=2
    else:
        x=0
        y=0
    change()

GPIO.add_event_detect(21, GPIO.RISING, callback=get_spr1)
GPIO.add_event_detect(22, GPIO.RISING, callback=get_spr2)

while(1):
    char = screen.getch()
    if char == 108 or char == 268:
        spd = char
        speed(spd)
    else:
        dire = char
        direction(dire)
    
