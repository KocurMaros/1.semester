import curses
import RPi.GPIO as GPIO
import os
import time
from datetime import datetime

GPIO.setwarnings(False)

screen = curses.initscr()
curses.noecho()
curses.cbreak()
screen.keypad(True)

GPIO.setmode(GPIO.BOARD)
GPIO.setup(7 , GPIO.OUT)
GPIO.setup(11 , GPIO.OUT)
GPIO.setup(8 , GPIO.OUT)
GPIO.setup(12 , GPIO.OUT)
GPIO.setup(33, GPIO.OUT)
GPIO.setup(35, GPIO.OUT)
r = GPIO.PWM(33, 100)
l = GPIO.PWM(35, 100)

r.start(0)
l.start(0)
char = 32
previouse_char = 32
x = 0
y = 1
speed = 0
try:
    while True:
        char = screen.getch()
    
        if char == 263:
            break
      
        if char == 43:
            x+=20
        elif char == 45:
            x-=20
        else:
            print(char, + previouse_char, + x)
            previouse_char = char
            
        if(x<=0):
            x=0
        elif(x>=100):
            x=100
            
        if (previouse_char != char): #bez nulovania rychlosti funguje  
                y = 0
        if y == 0:
            x = 0
            y = 1
            
        r.ChangeDutyCycle(x)        
        l.ChangeDutyCycle(x)
        
        if char == curses.KEY_UP:
            GPIO.output(7, True)
            GPIO.output(11, True)
            GPIO.output(8, False)
            GPIO.output(12, False)
        elif char == curses.KEY_DOWN:
            GPIO.output(7, False)
            GPIO.output(11, False)
            GPIO.output(8, True)
            GPIO.output(12, True)
        elif char == curses.KEY_RIGHT:
            GPIO.output(7, True)
            GPIO.output(11, False)
            GPIO.output(8, False)
            GPIO.output(12, True)
        elif char == curses.KEY_LEFT:
            GPIO.output(7, False)
            GPIO.output(11, True)
            GPIO.output(8, True)
            GPIO.output(12, False)
        elif char == 32:
            GPIO.output(7, False)
            GPIO.output(11, False)
            GPIO.output(8, False)
            GPIO.output(12, False) 
            
finally:
    curses.nocbreak()
    screen.keypad(0)
    curses.echo()
    curses.endwin()
    GPIO.cleanup()
